generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(cuid())
  name           String?
  email          String     @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String
  role           UserType   @default(USER)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt

  sessions       Session[]
  documents      Document[]
  orders         Order[]

  @@map("users")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model Document {
  id          String   @id @default(cuid())
  title       String
  description String?
  url         String
  type        String
  size        Int
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("documents")
}

model Order {
  id                    String      @id @default(cuid())
  number                String      @unique
  poNumber              String?
  orderConfirmation     String?
  orderConfirmationDate DateTime?
  requiredDeliveryDate  DateTime?
  status                String      @default("pending")
  total                 Float
  userId                String
  createdAt             DateTime    @default(now())
  updatedAt             DateTime    @updatedAt
  orderItems            OrderItem[]
  user                  User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("orders")
}

model OrderItem {
  id            String   @id @default(cuid())
  orderId       String
  modelNo       String
  qtyOrdered    Int
  qtyDelivered  Int      @default(0)
  qtyPending    Int
  status        String   @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  order         Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

enum UserType {
  ADMIN
  USER
}

enum OrderStatus {
  pending
  processing
  completed
  cancelled
  partial
}

enum OrderItemStatus {
  pending
  partial
  delivered
}
